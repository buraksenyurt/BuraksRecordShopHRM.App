// <auto-generated />
using System;
using BuraksRecordShopHRM.Api.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BuraksRecordShopHRM.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210419000240_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BuraksRecordShopHRM.Shared.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            Name = "Germany"
                        },
                        new
                        {
                            CountryId = 2,
                            Name = "Englane"
                        },
                        new
                        {
                            CountryId = 3,
                            Name = "Turkey"
                        },
                        new
                        {
                            CountryId = 4,
                            Name = "Portugal"
                        },
                        new
                        {
                            CountryId = 5,
                            Name = "Spain"
                        });
                });

            modelBuilder.Entity("BuraksRecordShopHRM.Shared.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.HasKey("EmployeeId");

                    b.HasIndex("CountryId");

                    b.HasIndex("JobCategoryId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            BirthDate = new DateTime(1967, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CountryId = 1,
                            Email = "junger.clup@buraksrecords.com",
                            FirstName = "Junger",
                            JobCategoryId = 1,
                            JoinedDate = new DateTime(1990, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Klöp",
                            Latitude = 0.0,
                            Longitude = 0.0
                        },
                        new
                        {
                            EmployeeId = 2,
                            BirthDate = new DateTime(1974, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CountryId = 1,
                            Email = "aleksa.broger@buraksrecords.com",
                            FirstName = "Aleksa",
                            JobCategoryId = 3,
                            JoinedDate = new DateTime(2000, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Bröger",
                            Latitude = 0.0,
                            Longitude = 0.0
                        },
                        new
                        {
                            EmployeeId = 3,
                            BirthDate = new DateTime(1976, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CountryId = 3,
                            Email = "burak.selim@buraksrecords.com",
                            FirstName = "Burak",
                            JobCategoryId = 2,
                            JoinedDate = new DateTime(2001, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Selim",
                            Latitude = 0.0,
                            Longitude = 0.0
                        },
                        new
                        {
                            EmployeeId = 4,
                            BirthDate = new DateTime(1985, 3, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CountryId = 5,
                            Email = "camelia.veazques@buraksrecords.com",
                            FirstName = "Camelia Oscar De La",
                            JobCategoryId = 4,
                            JoinedDate = new DateTime(2010, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Fuante Garcia Velazques",
                            Latitude = 0.0,
                            Longitude = 0.0
                        });
                });

            modelBuilder.Entity("BuraksRecordShopHRM.Shared.JobCategory", b =>
                {
                    b.Property<int>("JobCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobCategoryId");

                    b.ToTable("JobCategories");

                    b.HasData(
                        new
                        {
                            JobCategoryId = 1,
                            Name = "Reseach Lab"
                        },
                        new
                        {
                            JobCategoryId = 2,
                            Name = "Finance"
                        },
                        new
                        {
                            JobCategoryId = 3,
                            Name = "IT"
                        },
                        new
                        {
                            JobCategoryId = 4,
                            Name = "Shop Assistant"
                        },
                        new
                        {
                            JobCategoryId = 5,
                            Name = "Store Staff"
                        });
                });

            modelBuilder.Entity("BuraksRecordShopHRM.Shared.Employee", b =>
                {
                    b.HasOne("BuraksRecordShopHRM.Shared.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuraksRecordShopHRM.Shared.JobCategory", "JobCategory")
                        .WithMany()
                        .HasForeignKey("JobCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("JobCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
